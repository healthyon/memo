rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자별 메모 데이터 보안 규칙
    match /users/{userId}/notes/{noteId} {
      // 읽기: 본인의 메모만 읽기 가능
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // 쓰기: 본인의 메모만 생성/수정 가능
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && isValidNoteData(request.resource.data);
      
      // 삭제: 본인의 메모만 삭제 가능
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // 데이터 유효성 검증 함수
    function isValidNoteData(data) {
      return data.keys().hasAll(['id', 'content', 'createdAt', 'updatedAt', 'userId'])
             && data.keys().hasOnly(['id', 'content', 'createdAt', 'updatedAt', 'userId'])
             && data.id is string
             && data.content is string
             && data.content.size() <= 10000  // 최대 10,000자
             && data.createdAt is timestamp
             && data.updatedAt is timestamp
             && data.userId == request.auth.uid;
    }
    
    // 기존 레거시 notes 컬렉션 (개발/마이그레이션용)
    match /notes/{noteId} {
      // 익명 사용자도 접근 가능하지만 제한적
      allow read, write: if request.auth != null
                         && request.time < timestamp.date(2025, 12, 31); // 임시 만료일
    }
    
    // 기타 모든 문서에 대한 기본 거부
    match /{document=**} {
      allow read, write: if false;
    }
  }
}